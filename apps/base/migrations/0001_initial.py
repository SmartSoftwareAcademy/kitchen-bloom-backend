# Generated by Django 5.2.3 on 2025-06-24 09:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(default='smtp', max_length=255, unique=True)),
                ('email_host', models.CharField(max_length=255)),
                ('email_port', models.IntegerField()),
                ('email_host_user', models.CharField(max_length=255)),
                ('email_host_password', models.CharField(default='fskwauczrnscjikr', max_length=255)),
                ('email_use_tls', models.BooleanField(default=True)),
                ('email_use_ssl', models.BooleanField(default=False)),
                ('fail_silently', models.BooleanField(default=True)),
                ('email_from', models.CharField(default='codevertexitsolutions@gmail.com', max_length=255)),
                ('email_from_name', models.CharField(default='CodeVertex', max_length=255)),
                ('email_subject', models.CharField(default='CodeVertex', max_length=255)),
                ('email_body', models.TextField(default='CodeVertex')),
            ],
            options={
                'verbose_name': 'email config',
                'verbose_name_plural': 'email configs',
            },
        ),
        migrations.CreateModel(
            name='SMSSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('twilio', 'Twilio'), ('africastalking', "Africa's Talking")], default='twilio', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('twilio_account_sid', models.CharField(blank=True, default='', max_length=100)),
                ('twilio_auth_token', models.CharField(blank=True, default='', max_length=100)),
                ('twilio_phone_number', models.CharField(blank=True, default='', max_length=20)),
                ('africastalking_username', models.CharField(blank=True, default='', max_length=100)),
                ('africastalking_api_key', models.CharField(blank=True, default='', max_length=100)),
                ('africastalking_sender_id', models.CharField(blank=True, default='', max_length=15)),
            ],
            options={
                'verbose_name_plural': 'SMS Settings',
            },
        ),
        migrations.CreateModel(
            name='SystemModuleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singleton_enforcer', models.BooleanField(default=True, editable=False, null=True, unique=True)),
                ('modules_config', models.JSONField(blank=True, default=dict, null=True, verbose_name='modules config')),
                ('reporting_enabled_reports', models.JSONField(blank=True, default=dict, null=True, verbose_name='enabled reports')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='email notifications')),
                ('alert_email', models.EmailField(blank=True, max_length=254, verbose_name='alert email')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS notifications')),
                ('alert_phone', models.CharField(blank=True, max_length=20, verbose_name='alert phone')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='push notifications')),
                ('low_stock_alerts', models.BooleanField(default=True, verbose_name='low stock alerts')),
                ('low_stock_threshold', models.IntegerField(default=10, verbose_name='low stock threshold')),
                ('order_notifications', models.BooleanField(default=True, verbose_name='order notifications')),
                ('payment_notifications', models.BooleanField(default=True, verbose_name='payment notifications')),
                ('refund_notifications', models.BooleanField(default=True, verbose_name='refund notifications')),
                ('system_maintenance', models.BooleanField(default=True, verbose_name='system maintenance')),
                ('security_alerts', models.BooleanField(default=True, verbose_name='security alerts')),
                ('backup_notifications', models.BooleanField(default=True, verbose_name='backup notifications')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'notification settings',
                'verbose_name_plural': 'notification settings',
            },
        ),
        migrations.CreateModel(
            name='POSSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('require_customer', models.BooleanField(default=False, verbose_name='require customer')),
                ('allow_anonymous_orders', models.BooleanField(default=True, verbose_name='allow anonymous orders')),
                ('allow_hold_orders', models.BooleanField(default=True, verbose_name='allow hold orders')),
                ('allow_discounts', models.BooleanField(default=True, verbose_name='allow discounts')),
                ('allow_void', models.BooleanField(default=True, verbose_name='allow void')),
                ('allow_refunds', models.BooleanField(default=True, verbose_name='allow refunds')),
                ('max_discount_percent', models.DecimalField(decimal_places=2, default=20, max_digits=5, verbose_name='max discount percent')),
                ('require_discount_reason', models.BooleanField(default=False, verbose_name='require discount reason')),
                ('default_payment_method', models.CharField(default='cash', max_length=20, verbose_name='default payment method')),
                ('allow_split_payments', models.BooleanField(default=True, verbose_name='allow split payments')),
                ('require_payment_confirmation', models.BooleanField(default=False, verbose_name='require payment confirmation')),
                ('auto_print_receipt', models.BooleanField(default=False, verbose_name='auto print receipt')),
                ('show_tax_breakdown', models.BooleanField(default=True, verbose_name='show tax breakdown')),
                ('show_qr_code', models.BooleanField(default=False, verbose_name='show QR code')),
                ('enable_kds', models.BooleanField(default=True, verbose_name='enable kitchen display')),
                ('auto_assign_orders', models.BooleanField(default=False, verbose_name='auto assign orders')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'POS settings',
                'verbose_name_plural': 'POS settings',
            },
        ),
        migrations.CreateModel(
            name='ReceiptSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('header_text', models.TextField(blank=True, verbose_name='header text')),
                ('footer_text', models.TextField(blank=True, verbose_name='footer text')),
                ('show_logo', models.BooleanField(default=True, verbose_name='show logo')),
                ('show_tax_breakdown', models.BooleanField(default=True, verbose_name='show tax breakdown')),
                ('show_qr_code', models.BooleanField(default=False, verbose_name='show QR code')),
                ('show_barcode', models.BooleanField(default=False, verbose_name='show barcode')),
                ('paper_width', models.IntegerField(default=80, verbose_name='paper width (mm)')),
                ('font_size', models.CharField(default='normal', max_length=10, verbose_name='font size')),
                ('alignment', models.CharField(default='left', max_length=10, verbose_name='alignment')),
                ('show_order_number', models.BooleanField(default=True, verbose_name='show order number')),
                ('show_date_time', models.BooleanField(default=True, verbose_name='show date time')),
                ('show_cashier', models.BooleanField(default=True, verbose_name='show cashier')),
                ('show_customer', models.BooleanField(default=True, verbose_name='show customer')),
                ('show_payment_method', models.BooleanField(default=True, verbose_name='show payment method')),
                ('show_terms', models.BooleanField(default=False, verbose_name='show terms')),
                ('terms_text', models.TextField(blank=True, verbose_name='terms text')),
                ('show_return_policy', models.BooleanField(default=False, verbose_name='show return policy')),
                ('return_policy_text', models.TextField(blank=True, verbose_name='return policy text')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'receipt settings',
                'verbose_name_plural': 'receipt settings',
            },
        ),
        migrations.CreateModel(
            name='TaxSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('enabled', models.BooleanField(default=False, verbose_name='enabled')),
                ('use_for_pos', models.BooleanField(default=False, verbose_name='use for POS')),
                ('default_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='default rate')),
                ('tax_name', models.CharField(default='VAT', max_length=50, verbose_name='tax name')),
                ('tax_description', models.TextField(blank=True, verbose_name='tax description')),
                ('tax_inclusive', models.BooleanField(default=False, verbose_name='tax inclusive')),
                ('round_tax', models.BooleanField(default=True, verbose_name='round tax')),
                ('allow_multiple_rates', models.BooleanField(default=False, verbose_name='allow multiple rates')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'tax settings',
                'verbose_name_plural': 'tax settings',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('billing', 'Billing'), ('shipping', 'Shipping'), ('other', 'Other')], default='home', max_length=20, verbose_name='address type')),
                ('address_line1', models.CharField(max_length=255, verbose_name='address line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True, verbose_name='address line 2')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state/province/region')),
                ('postal_code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid postal code (letters, numbers, spaces, and hyphens only)', regex='^[0-9a-zA-Z\\-\\s]*$')], verbose_name='postal code')),
                ('country', models.CharField(default='Kenya', max_length=100, verbose_name='country')),
                ('is_primary', models.BooleanField(default=False, verbose_name='is primary')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='longitude')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_addresses', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ['-is_primary', 'address_type', 'city', 'address_line1'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='base_addres_content_6f5cd3_idx'), models.Index(fields=['is_primary'], name='base_addres_is_prim_910f77_idx'), models.Index(fields=['city'], name='base_addres_city_7e9888_idx'), models.Index(fields=['country'], name='base_addres_country_660e0b_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentGatewaySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('gateway_name', models.CharField(choices=[('mpesa', 'M-Pesa'), ('card', 'Card Payment'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('razorpay', 'Razorpay'), ('flutterwave', 'Flutterwave'), ('paystack', 'Paystack'), ('square', 'Square'), ('cash', 'Cash'), ('bank_transfer', 'Bank Transfer')], max_length=50, verbose_name='gateway name')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API key')),
                ('secret_key', models.CharField(blank=True, max_length=255, verbose_name='secret key')),
                ('webhook_url', models.URLField(blank=True, verbose_name='webhook URL')),
                ('mpesa_consumer_key', models.CharField(blank=True, max_length=255, verbose_name='M-Pesa consumer key')),
                ('mpesa_consumer_secret', models.CharField(blank=True, max_length=255, verbose_name='M-Pesa consumer secret')),
                ('mpesa_passkey', models.CharField(blank=True, max_length=255, verbose_name='M-Pesa passkey')),
                ('mpesa_shortcode', models.CharField(blank=True, max_length=10, verbose_name='M-Pesa shortcode')),
                ('mpesa_environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('live', 'Live')], default='sandbox', max_length=10, verbose_name='M-Pesa environment')),
                ('card_processor', models.CharField(blank=True, choices=[('stripe', 'Stripe'), ('square', 'Square'), ('razorpay', 'Razorpay'), ('flutterwave', 'Flutterwave'), ('paystack', 'Paystack')], max_length=50, verbose_name='card processor')),
                ('paypal_client_id', models.CharField(blank=True, max_length=255, verbose_name='PayPal client ID')),
                ('paypal_secret', models.CharField(blank=True, max_length=255, verbose_name='PayPal secret')),
                ('paypal_environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('live', 'Live')], default='sandbox', max_length=10, verbose_name='PayPal environment')),
                ('stripe_publishable_key', models.CharField(blank=True, max_length=255, verbose_name='Stripe publishable key')),
                ('stripe_secret_key', models.CharField(blank=True, max_length=255, verbose_name='Stripe secret key')),
                ('stripe_webhook_secret', models.CharField(blank=True, max_length=255, verbose_name='Stripe webhook secret')),
                ('transaction_fee_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='transaction fee percent')),
                ('transaction_fee_fixed', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='transaction fee fixed')),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='minimum amount')),
                ('maximum_amount', models.DecimalField(decimal_places=2, default=1000000, max_digits=10, verbose_name='maximum amount')),
                ('display_name', models.CharField(blank=True, max_length=100, verbose_name='display name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'payment gateway settings',
                'verbose_name_plural': 'payment gateway settings',
                'unique_together': {('gateway_name',)},
            },
        ),
    ]
