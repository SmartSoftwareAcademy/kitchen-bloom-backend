# Generated by Django 5.2.3 on 2025-06-28 09:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('legal_name', models.CharField(max_length=255, verbose_name='legal name')),
                ('tax_id', models.CharField(blank=True, help_text="Company's tax identification number", max_length=50, null=True, verbose_name='tax ID')),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='registration number')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/logos/', verbose_name='logo')),
                ('primary_contact_email', models.EmailField(max_length=254, verbose_name='primary contact email')),
                ('primary_contact_phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='primary contact phone')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('address', models.TextField(verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state/province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='Kenya', max_length=100, verbose_name='country')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('currency', models.CharField(default='KES', help_text='ISO 4217 currency code (e.g., KES, USD, EUR)', max_length=3, verbose_name='default currency')),
                ('timezone', models.CharField(default='Africa/Nairobi', help_text='Timezone in format Area/Location', max_length=50, verbose_name='timezone')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
            ],
            options={
                'verbose_name': 'business',
                'verbose_name_plural': 'businesses',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('code', models.CharField(help_text='Short code for the branch (e.g., NBO, MSA)', max_length=10, verbose_name='branch code')),
                ('address', models.TextField(verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='state/province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='Kenya', max_length=100, verbose_name='country')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, help_text='Set as the default branch for the company', verbose_name='is default branch')),
                ('opening_hours', models.JSONField(blank=True, default=dict, help_text='Store opening hours in JSON format', verbose_name='opening hours')),
                ('location', models.JSONField(blank=True, help_text='Latitude and longitude for mapping', null=True, verbose_name='geolocation')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional branch-specific data in JSON format', verbose_name='additional metadata')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branches', to=settings.AUTH_USER_MODEL, verbose_name='branch manager')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='branches.company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'branch',
                'verbose_name_plural': 'branches',
                'ordering': ('company', 'name'),
                'unique_together': {('company', 'code'), ('company', 'name')},
            },
        ),
    ]
