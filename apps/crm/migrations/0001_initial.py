# Generated by Django 5.2.3 on 2025-06-28 09:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('color', models.CharField(choices=[('#FF0000', 'Red'), ('#00FF00', 'Green'), ('#0000FF', 'Blue'), ('#FFFF00', 'Yellow'), ('#FF00FF', 'Magenta'), ('#00FFFF', 'Cyan'), ('#FFA500', 'Orange'), ('#800080', 'Purple'), ('#008000', 'Dark Green'), ('#000080', 'Navy')], default='#000000', help_text='Tag color for visual distinction', max_length=7, verbose_name='color')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this tag is active and can be used', verbose_name='is active')),
            ],
            options={
                'verbose_name': 'customer tag',
                'verbose_name_plural': 'customer tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('birthday', models.DateField(blank=True, help_text="Customer's birthday for special offers", null=True, verbose_name='birthday')),
                ('customer_code', models.CharField(db_index=True, help_text='Unique identifier for the customer', max_length=20, unique=True, verbose_name='customer code')),
                ('customer_type', models.CharField(choices=[('individual', 'Individual'), ('business', 'Business'), ('wholesaler', 'Wholesaler'), ('retail', 'Retail Customer'), ('vip', 'VIP Customer')], default='individual', max_length=20, verbose_name='customer type')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1, null=True, verbose_name='gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('tax_id', models.CharField(blank=True, help_text='VAT/GST/TIN number', max_length=50, verbose_name='tax ID')),
                ('alternate_phone', models.CharField(blank=True, max_length=20, verbose_name='alternate phone')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='address line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='address line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='state/province/region')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='Kenya', max_length=100, verbose_name='country')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='company name')),
                ('company_registration', models.CharField(blank=True, help_text='Company registration number', max_length=100, verbose_name='company registration')),
                ('vat_number', models.CharField(blank=True, max_length=50, verbose_name='VAT number')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('preferred_contact_method', models.CharField(blank=True, choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('phone', 'Phone'), ('none', 'None')], default='email', max_length=10, verbose_name='preferred contact method')),
                ('marketing_opt_in', models.BooleanField(default=False, help_text='Customer has opted in to receive marketing communications', verbose_name='marketing opt-in')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this customer', verbose_name='internal notes')),
                ('active_gift_cards', models.ManyToManyField(blank=True, related_name='active_customers', to='accounting.giftcard', verbose_name='active gift cards')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
                'ordering': ['-created_at'],
            },
        ),
    ]
