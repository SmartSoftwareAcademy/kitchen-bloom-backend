# Generated by Django 5.2.3 on 2025-06-28 09:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        ('inventory', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='inventorytransaction',
            name='related_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to='sales.order', verbose_name='related order'),
        ),
        migrations.AddField(
            model_name='menu',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='branches.branch', verbose_name='branch'),
        ),
        migrations.AddField(
            model_name='menu',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_menus', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='menu',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='allergens',
            field=models.ManyToManyField(blank=True, related_name='menu_items', to='inventory.allergy'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items', to='inventory.category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_menu_items', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.menu', verbose_name='menu'),
        ),
        migrations.AddField(
            model_name='branchstock',
            name='menu_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_stock', to='inventory.menuitem', verbose_name='menu item'),
        ),
        migrations.AddField(
            model_name='menuitemmodifier',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='menuitemmodifier',
            name='menu_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifiers', to='inventory.menuitem', verbose_name='menu item'),
        ),
        migrations.AddField(
            model_name='modifier',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifiers', to='branches.branch', verbose_name='branch'),
        ),
        migrations.AddField(
            model_name='modifier',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_modifiers', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='modifier',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='menuitemmodifier',
            name='modifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='inventory.modifier', verbose_name='modifier'),
        ),
        migrations.AddField(
            model_name='modifieroption',
            name='allergens',
            field=models.ManyToManyField(blank=True, related_name='modifier_options', to='inventory.allergy'),
        ),
        migrations.AddField(
            model_name='modifieroption',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='modifieroption',
            name='modifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='inventory.modifier', verbose_name='modifier'),
        ),
        migrations.AddField(
            model_name='product',
            name='allergens',
            field=models.ManyToManyField(blank=True, related_name='products', to='inventory.allergy'),
        ),
        migrations.AddField(
            model_name='product',
            name='branches',
            field=models.ManyToManyField(related_name='products', through='inventory.BranchStock', to='branches.branch', verbose_name='branches'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='inventory.category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='product',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='inventoryadjustment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='branchstock',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_stock', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='batch',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='inventory.category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='inventory.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_purchase_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='receiving_branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiving_purchase_orders', to='branches.branch', verbose_name='receiving branch'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='purchase_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_recipes', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='menu_item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recipe', to='inventory.menuitem', verbose_name='menu item'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='inventory.product', verbose_name='ingredient'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='inventory.recipe', verbose_name='recipe'),
        ),
        migrations.AddField(
            model_name='stockcount',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_counts', to='branches.branch'),
        ),
        migrations.AddField(
            model_name='stockcount',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='stockcount',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_counts', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stockcount',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_counts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stock_transfers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='source_branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='branches.branch'),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='target_branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='branches.branch'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='inventory.supplier', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='inventory.supplier', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='unit_of_measure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipe_ingredients', to='inventory.unitofmeasure', verbose_name='unit of measure'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='unit_of_measure',
            field=models.ForeignKey(help_text='Standard unit for this product variant', on_delete=django.db.models.deletion.PROTECT, related_name='variants', to='inventory.unitofmeasure', verbose_name='unit of measure'),
        ),
        migrations.AddField(
            model_name='product',
            name='unit_of_measure',
            field=models.ForeignKey(help_text='Standard unit for this product', on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.unitofmeasure', verbose_name='unit of measure'),
        ),
        migrations.AlterUniqueTogether(
            name='batchstock',
            unique_together={('batch', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='menu',
            unique_together={('branch', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='menuitem',
            unique_together={('menu', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='modifier',
            unique_together={('branch', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='menuitemmodifier',
            unique_together={('menu_item', 'modifier')},
        ),
        migrations.AlterUniqueTogether(
            name='modifieroption',
            unique_together={('modifier', 'name')},
        ),
        migrations.AddConstraint(
            model_name='batch',
            constraint=models.CheckConstraint(condition=models.Q(('expiry_date__isnull', True), ('manufactured_date__isnull', True), ('expiry_date__gte', models.F('manufactured_date')), _connector='OR'), name='valid_expiry_date'),
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together={('product', 'batch_number')},
        ),
        migrations.AlterUniqueTogether(
            name='recipeingredient',
            unique_together={('recipe', 'ingredient')},
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['sku'], name='productvariant_sku_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['barcode'], name='productvariant_barcode_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['is_active'], name='productvariant_active_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['SKU'], name='product_sku_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['barcode'], name='product_barcode_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='product_active_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_type'], name='product_type_idx'),
        ),
    ]
