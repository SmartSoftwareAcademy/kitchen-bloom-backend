# Generated by Django 5.2.3 on 2025-06-28 09:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        ('crm', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('program_type', models.CharField(choices=[('points', 'Points System'), ('tiered', 'Tiered System'), ('cashback', 'Cashback System'), ('voucher', 'Voucher System')], default='points', max_length=20, verbose_name='program type')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='active', max_length=20, verbose_name='status')),
                ('points_per_dollar', models.DecimalField(decimal_places=2, default=1.0, help_text='Number of loyalty points earned per dollar spent', max_digits=5, verbose_name='points per dollar')),
                ('minimum_points_for_reward', models.PositiveIntegerField(default=1000, help_text='Minimum points required to redeem rewards', verbose_name='minimum points for reward')),
                ('points_expiry_days', models.PositiveIntegerField(default=365, help_text='Number of days after which points expire', verbose_name='points expiry days')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loyalty_programs', to='branches.branch', verbose_name='branch')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
            ],
            options={
                'verbose_name': 'loyalty program',
                'verbose_name_plural': 'loyalty programs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('points_required', models.PositiveIntegerField(help_text='Number of points required to redeem this reward', verbose_name='points required')),
                ('value', models.DecimalField(decimal_places=2, help_text='Value of the reward in currency', max_digits=10, verbose_name='value')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Number of this reward available', verbose_name='stock quantity')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this reward is currently available', verbose_name='is active')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rewards', to='loyalty.loyaltyprogram', verbose_name='loyalty program')),
            ],
            options={
                'verbose_name': 'loyalty reward',
                'verbose_name_plural': 'loyalty rewards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('minimum_points', models.PositiveIntegerField(default=0, help_text='Minimum points required to reach this tier', verbose_name='minimum points')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage for this tier', max_digits=5, verbose_name='discount percentage')),
                ('special_benefits', models.TextField(blank=True, help_text='Additional benefits for this tier', verbose_name='special benefits')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiers', to='loyalty.loyaltyprogram', verbose_name='loyalty program')),
            ],
            options={
                'verbose_name': 'loyalty tier',
                'verbose_name_plural': 'loyalty tiers',
                'ordering': ['minimum_points'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('transaction_type', models.CharField(choices=[('earn', 'Earn Points'), ('redeem', 'Redeem Points'), ('adjust', 'Adjust Points')], default='earn', max_length=20, verbose_name='transaction type')),
                ('points', models.IntegerField(help_text='Number of points in this transaction', validators=[django.core.validators.MinValueValidator(0)], verbose_name='points')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loyalty_transactions', to='crm.customer', verbose_name='customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='loyalty.loyaltyprogram', verbose_name='loyalty program')),
                ('reference_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loyalty_transactions', to='sales.order', verbose_name='reference order')),
            ],
            options={
                'verbose_name': 'loyalty transaction',
                'verbose_name_plural': 'loyalty transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loyalty_redemptions', to='crm.customer', verbose_name='customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loyalty_redemptions', to='sales.order', verbose_name='order')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='loyalty.loyaltyreward', verbose_name='reward')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='loyalty.loyaltytransaction', verbose_name='transaction')),
            ],
            options={
                'verbose_name': 'loyalty redemption',
                'verbose_name_plural': 'loyalty redemptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='loyaltyprogram',
            index=models.Index(fields=['created_at'], name='loyalty_loy_created_2707af_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyprogram',
            index=models.Index(fields=['updated_at'], name='loyalty_loy_updated_dc2fe4_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyprogram',
            index=models.Index(fields=['status'], name='loyalty_loy_status_353ad8_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyprogram',
            index=models.Index(fields=['branch'], name='loyalty_loy_branch__bcbc63_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyreward',
            index=models.Index(fields=['created_at'], name='loyalty_loy_created_409c31_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyreward',
            index=models.Index(fields=['program'], name='loyalty_loy_program_a0266b_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyreward',
            index=models.Index(fields=['points_required'], name='loyalty_loy_points__2476cb_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyreward',
            index=models.Index(fields=['is_active'], name='loyalty_loy_is_acti_57580b_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytier',
            index=models.Index(fields=['program'], name='loyalty_loy_program_6b99ed_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytier',
            index=models.Index(fields=['minimum_points'], name='loyalty_loy_minimum_a525b3_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytransaction',
            index=models.Index(fields=['created_at'], name='loyalty_loy_created_013407_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytransaction',
            index=models.Index(fields=['customer'], name='loyalty_loy_custome_39af89_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytransaction',
            index=models.Index(fields=['program'], name='loyalty_loy_program_217ade_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltytransaction',
            index=models.Index(fields=['transaction_type'], name='loyalty_loy_transac_749e7d_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyredemption',
            index=models.Index(fields=['created_at'], name='loyalty_loy_created_4d2e09_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyredemption',
            index=models.Index(fields=['customer'], name='loyalty_loy_custome_d6492b_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyredemption',
            index=models.Index(fields=['reward'], name='loyalty_loy_reward__3f5684_idx'),
        ),
        migrations.AddIndex(
            model_name='loyaltyredemption',
            index=models.Index(fields=['transaction'], name='loyalty_loy_transac_ade19d_idx'),
        ),
    ]
