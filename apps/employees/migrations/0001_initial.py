# Generated by Django 5.2.3 on 2025-06-28 09:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('branches', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(help_text='The name of the department', max_length=100, unique=True, verbose_name='department name')),
                ('code', models.CharField(help_text='Short code for the department', max_length=10, unique=True, verbose_name='department code')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the department', verbose_name='description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this department is currently active', verbose_name='is active')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('parent_department', models.ForeignKey(blank=True, help_text='The parent department if this is a sub-department', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_departments', to='employees.department', verbose_name='parent department')),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('employee_id', models.CharField(help_text='Unique identifier for the employee', max_length=20, unique=True, verbose_name='employee ID')),
                ('date_of_birth', models.DateField(blank=True, help_text="Employee's date of birth", null=True, verbose_name='date of birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], help_text="Employee's gender", max_length=1, verbose_name='gender')),
                ('phone_number', models.CharField(blank=True, help_text="Employee's contact number", max_length=20, verbose_name='phone number')),
                ('emergency_contact_name', models.CharField(blank=True, help_text='Name of emergency contact person', max_length=100, verbose_name='emergency contact name')),
                ('emergency_contact_phone', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20, verbose_name='emergency contact phone')),
                ('emergency_contact_relation', models.CharField(blank=True, help_text='Relationship to employee', max_length=50, verbose_name='emergency contact relation')),
                ('hire_date', models.DateField(blank=True, help_text='Date when employee was hired', null=True, verbose_name='hire date')),
                ('employment_type', models.CharField(choices=[('FT', 'Full Time'), ('PT', 'Part Time'), ('TEMP', 'Temporary'), ('SEA', 'Seasonal'), ('INT', 'Intern'), ('CASUAL', 'Casual Worker'), ('CONTRACT', 'Contract Worker')], default='FT', help_text='Type of employment', max_length=10, verbose_name='employment type')),
                ('salary', models.DecimalField(decimal_places=2, default=0, help_text='Monthly salary in local currency', max_digits=12, verbose_name='salary')),
                ('custom_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Custom rate override', max_digits=12, null=True, verbose_name='custom rate')),
                ('contract_start_date', models.DateField(blank=True, null=True, verbose_name='contract start date')),
                ('contract_end_date', models.DateField(blank=True, null=True, verbose_name='contract end date')),
                ('skills', models.JSONField(blank=True, default=list, help_text='Employee skills for rate calculation', verbose_name='skills')),
                ('availability_schedule', models.JSONField(blank=True, default=dict, help_text='Availability schedule', verbose_name='availability schedule')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this employee is currently active', verbose_name='is active')),
                ('bank_name', models.CharField(blank=True, help_text='Name of the bank for salary payments', max_length=100, verbose_name='bank name')),
                ('bank_account_number', models.CharField(blank=True, help_text='Bank account number for salary payments', max_length=50, verbose_name='bank account number')),
                ('bank_branch', models.CharField(blank=True, help_text='Branch of the bank', max_length=100, verbose_name='bank branch')),
                ('tax_id', models.CharField(blank=True, help_text='Tax identification number', max_length=50, verbose_name='tax ID')),
                ('national_id', models.CharField(blank=True, help_text='National identification number', max_length=50, verbose_name='national ID')),
                ('shif_number', models.CharField(blank=True, help_text='National Hospital Insurance Fund number', max_length=50, verbose_name='SHIF number')),
                ('nhif_number', models.CharField(blank=True, help_text='National Hospital Insurance Fund number', max_length=50, verbose_name='NHIF number')),
                ('nssf_number', models.CharField(blank=True, help_text='National Social Security Fund number', max_length=50, verbose_name='NSSF number')),
                ('kra_pin', models.CharField(blank=True, help_text='Kenya Revenue Authority Personal Identification Number', max_length=50, verbose_name='KRA PIN')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the employee', verbose_name='notes')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='branches.branch', verbose_name='branch')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='employees.department', verbose_name='department')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='accounts.role', verbose_name='role')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='employees.employee', verbose_name='manager')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL, verbose_name='user account')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employees',
                'ordering': ['user__last_name', 'user__first_name'],
                'permissions': [('view_sensitive_info', 'Can view sensitive employee information'), ('manage_employees', 'Can add, edit, and delete employees')],
            },
        ),
        migrations.CreateModel(
            name='LeavePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, verbose_name='policy name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('max_concurrent_leaves', models.PositiveIntegerField(default=3, help_text='Maximum number of employees on leave at the same time', verbose_name='max concurrent leaves')),
                ('blackout_dates', models.JSONField(default=list, help_text='Dates when leave is not allowed', verbose_name='blackout dates')),
                ('minimum_notice_days', models.PositiveIntegerField(default=7, verbose_name='minimum notice days')),
                ('max_leave_days_per_year', models.PositiveIntegerField(default=30, verbose_name='max leave days per year')),
                ('approval_levels', models.JSONField(default=list, help_text='List of approval levels and roles', verbose_name='approval levels')),
                ('auto_approve_days', models.PositiveIntegerField(default=0, help_text='Days below which leave is auto-approved', verbose_name='auto approve days')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_policies', to='branches.branch', verbose_name='branch')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
            ],
            options={
                'verbose_name': 'leave policy',
                'verbose_name_plural': 'leave policies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, verbose_name='leave type name')),
                ('category', models.CharField(choices=[('PAID', 'Paid Leave'), ('UNPAID', 'Unpaid Leave'), ('SICK', 'Sick Leave'), ('MATERNITY', 'Maternity Leave'), ('PATERNITY', 'Paternity Leave'), ('COMPASSIONATE', 'Compassionate Leave'), ('BEREAVEMENT', 'Bereavement Leave'), ('STUDY', 'Study Leave'), ('SABBATICAL', 'Sabbatical Leave'), ('OTHER', 'Other')], default='PAID', max_length=20, verbose_name='leave category')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('default_days_per_year', models.PositiveIntegerField(default=21, verbose_name='default days per year')),
                ('max_days_per_request', models.PositiveIntegerField(blank=True, null=True, verbose_name='maximum days per request')),
                ('min_days_notice', models.PositiveIntegerField(default=7, verbose_name='minimum days notice')),
                ('max_consecutive_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='maximum consecutive days')),
                ('requires_approval', models.BooleanField(default=True, verbose_name='requires approval')),
                ('applicable_employment_types', models.JSONField(default=list, verbose_name='applicable employment types')),
                ('minimum_tenure_months', models.PositiveIntegerField(default=0, verbose_name='minimum tenure months')),
                ('is_paid', models.BooleanField(default=True, verbose_name='is paid leave')),
                ('pay_percentage', models.DecimalField(decimal_places=2, default=100.0, help_text='Percentage of salary paid during leave', max_digits=5, verbose_name='pay percentage')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('branch', models.ForeignKey(blank=True, help_text='Leave blank for company-wide leave types', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_types', to='branches.branch', verbose_name='branch')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
            ],
            options={
                'verbose_name': 'leave type',
                'verbose_name_plural': 'leave types',
                'ordering': ['name'],
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='RateStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, verbose_name='rate name')),
                ('rate_type', models.CharField(choices=[('monthly', 'Monthly Salary'), ('hourly', 'Hourly Rate'), ('daily', 'Daily Rate'), ('weekly', 'Weekly Rate'), ('project', 'Project Based'), ('piece', 'Piece Rate')], default='monthly', max_length=20, verbose_name='rate type')),
                ('base_amount', models.DecimalField(decimal_places=2, help_text='Base salary/rate amount', max_digits=12, verbose_name='base amount')),
                ('currency', models.CharField(default='KES', max_length=3, verbose_name='currency')),
                ('calculation_rules', models.JSONField(default=dict, help_text='JSON rules for rate calculation', verbose_name='calculation rules')),
                ('applicable_employment_types', models.JSONField(default=list, verbose_name='applicable employment types')),
                ('minimum_experience_years', models.PositiveIntegerField(default=0, verbose_name='minimum experience years')),
                ('maximum_experience_years', models.PositiveIntegerField(blank=True, null=True, verbose_name='maximum experience years')),
                ('effective_from', models.DateField(verbose_name='effective from')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='effective to')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('branch', models.ForeignKey(blank=True, help_text='Leave blank for company-wide rates', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rate_structures', to='branches.branch', verbose_name='branch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rate_structures', to='employees.employee', verbose_name='created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_rate_structures', to='employees.employee', verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'rate structure',
                'verbose_name_plural': 'rate structures',
                'ordering': ['work_category__name', '-effective_from'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='current_rate_structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='employees.ratestructure', verbose_name='current rate structure'),
        ),
        migrations.CreateModel(
            name='WorkCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='category name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='category code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('applicable_employment_types', models.JSONField(default=list, help_text='Employment types that can use this category', verbose_name='applicable employment types')),
                ('required_skills', models.JSONField(blank=True, default=list, verbose_name='required skills')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_categories', to='employees.department', verbose_name='department')),
            ],
            options={
                'verbose_name': 'work category',
                'verbose_name_plural': 'work categories',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='ratestructure',
            name='work_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate_structures', to='employees.workcategory', verbose_name='work category'),
        ),
        migrations.AddField(
            model_name='employee',
            name='work_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='employees.workcategory', verbose_name='work category'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='date')),
                ('check_in', models.DateTimeField(blank=True, null=True, verbose_name='check in')),
                ('check_out', models.DateTimeField(blank=True, null=True, verbose_name='check out')),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('LATE', 'Late Arrival'), ('HALF_DAY', 'Half Day'), ('ABSENT', 'Absent'), ('LEAVE', 'On Leave'), ('HOLIDAY', 'Public Holiday'), ('WEEKEND', 'Weekend')], default='PRESENT', max_length=20, verbose_name='status')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('is_approved', models.BooleanField(default=True, verbose_name='is approved')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('device_info', models.JSONField(blank=True, null=True, verbose_name='device info')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendances', to='employees.employee', verbose_name='approved by')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='employees.employee', verbose_name='employee')),
            ],
            options={
                'verbose_name': 'attendance',
                'verbose_name_plural': 'attendances',
                'ordering': ['-date', 'employee__user__last_name'],
                'indexes': [models.Index(fields=['employee', 'date'], name='employees_a_employe_030d17_idx'), models.Index(fields=['date', 'status'], name='employees_a_date_6df729_idx')],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('request_number', models.CharField(help_text='Unique leave request identifier', max_length=20, unique=True, verbose_name='request number')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('start_half_day', models.BooleanField(default=False, help_text='Leave starts in the afternoon', verbose_name='start half day')),
                ('end_half_day', models.BooleanField(default=False, help_text='Leave ends in the morning', verbose_name='end half day')),
                ('total_days', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='total days')),
                ('reason', models.TextField(blank=True, verbose_name='reason')),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10, verbose_name='priority')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='DRAFT', max_length=20, verbose_name='status')),
                ('requires_approval', models.BooleanField(default=True, verbose_name='requires approval')),
                ('approved_on', models.DateTimeField(blank=True, null=True, verbose_name='approved on')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='rejection reason')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, verbose_name='emergency contact name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='emergency contact phone')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, verbose_name='emergency contact relation')),
                ('destination', models.CharField(blank=True, max_length=200, verbose_name='destination')),
                ('contact_number_while_away', models.CharField(blank=True, max_length=20, verbose_name='contact number while away')),
                ('handover_notes', models.TextField(blank=True, verbose_name='handover notes')),
                ('supporting_documents', models.JSONField(blank=True, default=list, help_text='List of document URLs', verbose_name='supporting documents')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leave_requests', to='employees.employee', verbose_name='approved by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='employees.employee', verbose_name='employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='employees.leavetype', verbose_name='leave type')),
            ],
            options={
                'verbose_name': 'leave request',
                'verbose_name_plural': 'leave requests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['employee', 'status'], name='employees_l_employe_cc1aa4_idx'), models.Index(fields=['start_date', 'end_date'], name='employees_l_start_d_844d5d_idx'), models.Index(fields=['status', 'priority'], name='employees_l_status_127d09_idx')],
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('year', models.PositiveIntegerField(verbose_name='year')),
                ('allocated_days', models.PositiveIntegerField(default=0, verbose_name='allocated days')),
                ('used_days', models.PositiveIntegerField(default=0, verbose_name='used days')),
                ('carried_over_days', models.PositiveIntegerField(default=0, verbose_name='carried over days')),
                ('adjusted_days', models.DecimalField(decimal_places=2, default=0, help_text='Manual adjustments', max_digits=6, verbose_name='adjusted days')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='employees.employee', verbose_name='employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='employees.leavetype', verbose_name='leave type')),
            ],
            options={
                'verbose_name': 'leave balance',
                'verbose_name_plural': 'leave balances',
                'ordering': ['-year', 'leave_type__name'],
                'indexes': [models.Index(fields=['employee', 'year'], name='employees_l_employe_2b199e_idx'), models.Index(fields=['leave_type', 'year'], name='employees_l_leave_t_346522_idx')],
                'unique_together': {('employee', 'leave_type', 'year')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='ratestructure',
            unique_together={('work_category', 'branch', 'rate_type', 'effective_from')},
        ),
    ]
